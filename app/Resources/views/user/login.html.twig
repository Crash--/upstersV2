<div class="container login-container">
    <div class="row">
        <div class="col-xs-12 text-center">
            <h1>Connexion</h1>
            <hr>
            <div class="col-md-12 fb-login-button" scope="public_profile,email" onlogin="checkLoginState();">Me connecter via Facebook</div>

            <div class="col-xs-5"><hr></div>
            <div class="col-xs-2">OU</div>
            <div class="col-xs-5"><hr></div>

            {% if error %}
                <div class="alert alert-danger">
                    {{ error.messageKey|trans(error.messageData, 'security') }}
                </div>
            {% endif %}
            {{ form_start(form, {'action' : path('security_login') }) }}
            {{ form_row(form._username) }}
            {{ form_row(form._password) }}
            {{ form_row(form._viaFB) }}
            <button type="submit" class="btn fake-btn-green">Login <span class="fa fa-lock"></span> </button>
            <!--<div class="col-md-12 fake-btn fake-btn-orange" onclick="$('.login-container form').submit()" style="cursor: pointer">Login</div>-->
            <br>
            {{ form_end(form) }}
            <hr>
        </div>
    </div>
</div>

<!-- facebook JS SDK -->
<script>
    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
            // Logged into your app and Facebook.
            testAPI();
        } else if (response.status === 'not_authorized') {
            // The person is logged into Facebook, but not your app.
            document.getElementById('status').innerHTML = 'Please log ' +
                    'into this app.';
        } else {
            // The person is not logged into Facebook, so we're not sure if
            // they are logged into this app or not.
            document.getElementById('status').innerHTML = 'Please log ' +
                    'into Facebook.';
        }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
        FB.getLoginStatus(function(response) {
            statusChangeCallback(response);
        });
    }

    window.fbAsyncInit = function() {
        FB.init({
            appId      : '{{ fbKey }}',
            cookie     : true,  // enable cookies to allow the server to access
                                // the session
            xfbml      : true,  // parse social plugins on this page
            version    : 'v2.5' // use graph api version 2.5
        });

        // Now that we've initialized the JavaScript SDK, we call
        // FB.getLoginStatus().  This function gets the state of the
        // person visiting this page and can return one of three states to
        // the callback you provide.  They can be:
        //
        // 1. Logged into your app ('connected')
        // 2. Logged into Facebook, but not your app ('not_authorized')
        // 3. Not logged into Facebook and can't tell if they are logged into
        //    your app or not.
        //
        // These three cases are handled in the callback function.

        FB.getLoginStatus(function(response) {
            //statusChangeCallback(response);
        });

    };

    // Load the SDK asynchronously
    (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    function testAPI() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', {fields: 'email,name'}, function(response) {
            if (response.hasOwnProperty("error")) {
                console.log("Error: " + response.error.message);
            } else {
                console.log('Successful login for: ' + response.name);
                $('#login_form__viaFB').val(true);
                $('#login_form__username').val(response.email);
                $('#login_form__password').val('*******');
                $('button[type=submit]').click();
            }
        });
    }
</script>
